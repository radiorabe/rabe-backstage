app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: https://backstage.service.int.rabe.ch

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: https://backstage.service.int.rabe.ch
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt
  cache:
    store: memory

integrations:
  github:
    - host: github.com
      # This is a GitHub App that was generated using the backstage-cli. You can find out how to generate the credentials
      # file, and more information about setting up the GitHub integration here:
      # * https://backstage.io/docs/integrations/github/locations#configuration
      # * https://backstage.io/docs/integrations/github/github-apps
      apps:
        - $include: github-app-backstage-credentials.yaml

auth:
  environment: production

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/software-catalog-overview#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations: []
  providers:
    keycloakOrg:
      production:
        baseUrl: ${CATALOG_KEYCLOAK_BASEURL}
        loginRealm: ${CATALOG_KEYCLOAK_LOGINREALM}
        realm: ${CATALOG_KEYCLOAK_REALM}
        clientId: ${CATALOG_KEYCLOAK_CLIENT_ID}
        clientSecret: ${CATALOG_KEYCLOAK_CLIENT_SECRET}
        schedule:
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 1 }
          initialDelay: { seconds: 15 }
